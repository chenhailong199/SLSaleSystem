<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	<!-- 引入外部资源配置文件 -->
	<context:property-placeholder location="classpath:database.properties"/>
	
	<!-- 配置dbcp数据源 --> 
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" 
    		destroy-method="close" scope="singleton">
       <property name="driverClassName" value="${driver}"/>
       <property name="url" value="${url}"/>
       <property name="username" value="${username}"/>
       <property name="password" value="${password}"/>
       <!-- 初始化连接数 -->
       <property name="initialSize" value="${initialSize}"/>
       <!-- 最大活动连接数 -->
       <property name="maxActive" value="${maxActive}"/>
       <!-- 最大空闲连接数 -->
       <property name="maxIdle" value="${maxIdle}"/>
       <!-- 最小空闲连接数 -->
       <property name="minIdle" value="${minIdle}"/>
       <!-- 没有连接可用,等待连接的时间,单位:毫秒 -->
       <property name="maxWait" value="${maxWait}"/>
       <!-- 当前空闲连接数 < 2 && 当前活动数 > (最大活动数 - 3)  触发回收-->
       <property name="removeAbandoned" value="${removeAbandoned}"/>
       <!--  -->
       <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/>
       <!-- sql心跳 保证连接池中连接时真实有效的
       		testWhileIdle testOnBorrow testOnReturn validationQuery -->
       <!-- 开启Evict的定时校验,循环校验 -->
       <property name="testWhileIdle" value="true"/>
       <!-- 定义Evict的时间间隔,单位:毫秒,大于0才会开启evict -->
       <property name="timeBetweenEvictionRunsMillis" value="60000"/>
       <!-- 在进行borrowObject处理时,会对拿到的连接进行校验 false,不校验 -->
       <property name="testOnBorrow" value="false"/>
       <!-- 在进行returnObject处理时,会对返回的连接进行校验 false,不校验 -->
       <property name="testOnReturn" value="false"/>
       <!-- 校验使用的SQL语句, -->
       <property name="validationQuery" value="select 1"/>
       <!-- 校验每次使用的连接数量,一般等于最大连接数 -->
       <property name="numTestsPerEvictionRun" value="${maxActive}"/>
    </bean>
    
    <!-- 事务交由Spring管理 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
       <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <!-- 配置sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="dataSource" ref="dataSource"/>
        <!-- 自动扫描mapper.xml文件 -->  
        <property name="mapperLocations" value="classpath:com/sl/dao/..*.xml"/> 
    </bean>
	
	<!-- 批量扫描指定package包下的mapper接口并生成实例 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    	<property name="basePackage" value="com.sl.dao"></property>
    	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>
    

   <!-- AOP事务处理 -->
   <aop:aspectj-autoproxy />
   <aop:config proxy-target-class="true">
   		<aop:pointcut expression="execution(** com.sl.service..*(..))" id="servicePointcut"/>
   		<aop:advisor advice-ref="txAdvice" pointcut-ref="servicePointcut"/>
   </aop:config> 
   <!-- txAdvice 定义事务管理器,所有以hl开头的方法都要进行事务处理 -->
   <tx:advice id="txAdvice" transaction-manager="transactionManager">
   		<tx:attributes>
   			<tx:method name="tm*" propagation="REQUIRED" rollback-for="Exception"/>
   		</tx:attributes>
   </tx:advice>
    
   <!-- redis配置 -->
   <!-- <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
   		<property name="maxTotal" value="90" />
   		<property name="maxIdle" value="5" />
   		<property name="maxWaitMillis" value="1000"/>
   		<property name="testOnBorrow" value="true" />
   </bean> 
   <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
   		<constructor-arg ref="jedisPoolConfig"/>
   		<constructor-arg value="localhost"/>
   		<constructor-arg value="6379"/>
   </bean>
   <bean id="redisAPI" class="com.sl.common.RedisAPI">
   		<property name="jedisPool" ref="jedisPool" />
   </bean> -->
</beans>	